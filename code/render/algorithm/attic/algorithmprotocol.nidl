<?xml version="1.0" encoding="utf-8"?>
<Nebula3>
    <Protocol namespace="Algorithm" name="AlgorithmProtocol">
	<Dependency header="resources/resourceid.h"/>
	<Dependency header="graphics/abstractlightentity.h"/>
	<Dependency header="math/float4.h"/>

	<!-- enable/disable AO -->
	<Message name="EnableAmbientOcclusion" fourcc="ENAO">
		<InArg name="Enabled" type="bool"/>
	</Message>
		
	<!-- sets AO params -->
    <Message name="SetAmbientOcclusionParams" fourcc="SAOP">
		<InArg name="PowerExponent" type="float"/>
		<InArg name="Strength" type="float"/>
		<InArg name="AngleBias" type="float"/>
		<InArg name="Radius" type="float"/>
    </Message>
      
    <!-- enable/disable tonemapping -->
    <Message name="EnableToneMapping" fourcc="ENTM">
		<InArg name="Enabled" type="bool"/>
    </Message>
		
    <!-- enable/disable godrays -->
    <Message name="EnableVolumetricLighting" fourcc="EVLG">
		<InArg name="Enabled" type="bool"/>
    </Message>
		
	<!-- sets sun texture -->
	<Message name="SetSunTexture" fourcc="SUNT">
		<InArg name="Texture" type="Resources::ResourceId"/>	
	</Message>
		
	<!-- sets sun color -->
	<Message name="SetSunColor" fourcc="SUNC">
		<InArg name="Color" type="Math::float4"/>	
	</Message>
		
	<!-- adds a light to be rendered volumetrically -->
	<Message name="AddVolumetricLight" fourcc="ADRV">
		<InArg name="Light" type="Ptr<Graphics::AbstractLightEntity>"/>
	</Message>
		
	<!-- removes light from volumetric rendering -->
	<Message name="RemoveVolumetricLight" fourcc="RMRV">
		<InArg name="Light" type="Ptr<Graphics::AbstractLightEntity>"/>	
	</Message>
	
		
    </Protocol>
</Nebula3>    